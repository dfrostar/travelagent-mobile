name: Mobile CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test App
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
      
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      
      - name: Run TypeScript checks
        run: yarn tsc --noEmit
      
      - name: Run ESLint
        run: yarn lint
      
      - name: Run tests
        run: yarn test --coverage
      
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build-android:
    name: Build Android
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
      
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
      
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      
      - name: Build Android Release
        run: |
          cd android
          ./gradlew assembleRelease
        env:
          TRAVL_TOKEN_ADDRESS: ${{ secrets.TRAVL_TOKEN_ADDRESS }}
          UNISWAP_ROUTER_ADDRESS: ${{ secrets.UNISWAP_ROUTER_ADDRESS }}
          WETH_ADDRESS: ${{ secrets.WETH_ADDRESS }}
          USDC_ADDRESS: ${{ secrets.USDC_ADDRESS }}
          DAI_ADDRESS: ${{ secrets.DAI_ADDRESS }}
          USDT_ADDRESS: ${{ secrets.USDT_ADDRESS }}
      
      - name: Upload Android Release
        uses: actions/upload-artifact@v3
        with:
          name: app-release
          path: android/app/build/outputs/apk/release/app-release.apk
      
      - name: Upload to Play Store
        uses: r0adkll/upload-google-play@v1
        if: github.ref == 'refs/heads/main'
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAY_STORE_JSON_KEY }}
          packageName: com.travelagent.app
          releaseFiles: android/app/build/outputs/apk/release/app-release.apk
          track: internal
          status: completed

  build-ios:
    name: Build iOS
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
      
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true
      
      - name: Install Cocoapods
        run: |
          cd ios
          bundle install
          bundle exec pod install
      
      - name: Build iOS
        run: |
          cd ios
          xcodebuild -workspace TravelAgent.xcworkspace -scheme TravelAgent -configuration Release -archivePath TravelAgent.xcarchive archive
        env:
          TRAVL_TOKEN_ADDRESS: ${{ secrets.TRAVL_TOKEN_ADDRESS }}
          UNISWAP_ROUTER_ADDRESS: ${{ secrets.UNISWAP_ROUTER_ADDRESS }}
          WETH_ADDRESS: ${{ secrets.WETH_ADDRESS }}
          USDC_ADDRESS: ${{ secrets.USDC_ADDRESS }}
          DAI_ADDRESS: ${{ secrets.DAI_ADDRESS }}
          USDT_ADDRESS: ${{ secrets.USDT_ADDRESS }}
      
      - name: Upload iOS Archive
        uses: actions/upload-artifact@v3
        with:
          name: ios-archive
          path: ios/TravelAgent.xcarchive
      
      - name: Deploy to TestFlight
        if: github.ref == 'refs/heads/main'
        run: |
          cd ios
          bundle exec fastlane beta
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
          FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}

  deploy:
    name: Deploy
    needs: [build-android, build-ios]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: travel-agent
          SENTRY_PROJECT: mobile
        with:
          environment: production
          version: ${{ github.sha }}
      
      - name: Notify Discord
        uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          title: "Mobile App Deployment"
          description: "New version deployed to stores"
          color: 0x0051FF
          username: GitHub Actions
